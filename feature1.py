#Feature1 is the similarity search
# Added for testing
import json
from astrapy.db import AstraDB

import config
import pandas as pd


def search_similar(input_song_vector):
 # Initialize the client
  db = config.connect_AstraDB()



  #get_collections gives a dictionary of collection names
  collections = db.get_collections()
  collection_name = collections['status']['collections'][0]    #using 0 as we will have only 1 collection as of now.


  #Extracting from AstraDB - the collection object
  music_collection_object = db.collection(collection_name)


  #inputsong vector - User input - Testing
  #input_song_vector = [-0.6155596972,-0.3221485019,0.9556327462,-0.4673011005,0.1295922101,-0.8311023712,0.0473528244,-0.2667334974,-0.7159897089,-0.6882975698,-0.0141360592,-0.5183007121,0.4040862322,-0.2595492005,-0.0287257321,-0.0973566025,0.7576491237,0.0040881922,-0.5153636336,-0.2587322295,0.3279690146,-0.445224911,-0.1609870344,-0.3038627803,-0.2153998613,-0.0690115765,-0.2237845659,-0.1496434808,-0.1419589818,-0.1891467422,-0.1585104316,-0.0435742661,0.3957389891,0.5550045371,0.049118977,0.1527435631,0.0754737556,-0.2840684056,-0.4344647527,-0.3036572039,0.0990137532,-0.3656643927,0.6981474757,-0.2068613172,-0.1128455922,-0.4487200677,0.7128281593,-0.2639974654,-0.2898198366,-0.0539123528,0.0219654888,-0.5170405507,-1.2112863064,-0.0901905969,-0.2561018169,-0.0776701942,0.2494245768,0.6855846643,0.3188458979,-0.0642422363,-0.1664678752,-0.0904415324,-0.6887655854,-0.3298550248,0.2103847861,-0.2814533114,0.2700049877,0.0434284322,-0.0262943543,-0.4766764939,0.6281279325,-0.006783823,-0.3101803958,-0.2346370667,0.1619223803,0.0434991531,-0.3104431629,0.7916451693,0.3207042217,0.0220330786,-0.2279699743,0.5296492577,0.1197405979,-0.7598733306,0.3694469333,0.2128914148,0.303255111,0.4970870912,-0.5475019217,0.464024812,-0.3797987401,0.3015610576,-0.3253310323,0.5448186994,-0.0224258173,0.7742467523,-0.1737337708,-0.4603665173,-0.0691584498,-0.3937700093,0.1343978494,0.3678897619,0.0203162208,-0.1187499911,-0.7959755063,-0.4687196016,0.3338386416,-0.5493950844,0.7134093046,-0.4540084302,0.0915845707,-0.1446850598,-0.1556705534,0.3499887884,-0.1647077501,-0.2859515846,-0.2409700751,-0.519931674,-0.621778965,-0.1160114631,-0.2257942706,-0.3512194455,-0.4675955474,-0.2367126644,-0.1270840615,-0.8497210741,0.0681243241,-0.2547839284]
  #pre-processing as vector is gonna read from the input file.
  num_list = input_song_vector.strip('[]').split(',')

  # Convert the list of strings to a list of floats
  input_song_v = [float(num) for num in num_list]

  #similar_songs = music_collection_object.vector_find(input_song_v, limit=15, fields={"artist", "$vector","genre","album"})


  similar_songs = music_collection_object.vector_find(input_song_v, limit=15,fields={"track_id","artist", "genre","name", "album"})
  similar_songs_df = pd.DataFrame(similar_songs)
  return similar_songs_df
